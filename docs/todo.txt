sort.js

v-0.1
	node sort.js file 

		--done-- directories: src, test, appTests
		--done-- files: sort.js, package.json, appTestCode, sortLib.js
		--done-- link: mainFile-libFile
		--done-- inserting node-modules, .nyc-output, coverage to .gitignore
		--done-- implement: 
			--done-- parse()									 //basic parsing
			--done-- loadFileLines()				   //for only 1 file
			--done-- performSort()						 //that contains the sorting code and acts as a pseudo main

v-0.2
	node sort.js

	modification:
		--done-- parse()   //now parse will check whether the file is given or not
		--done-- performSort()  //now it will decide whether to go for file or stdin

	Implement:
		--done-- loadStdInLines()  //that will use io interface and take lines from user

	send:
		--done-- sending IO interface from main to other functions

	--done-- merged stdin and file input using fileStream
	--done-- single function that handles both the streams


v-0.3
	node sort.js -r

	Implementation:
		sortLines()			//A separate sorting function that can also handle reverse sorting

	modification:
		parse()			//parser should be smart enough to detect -r option
		performSort()  //now it should be able to act for reverse sorting


	--test async function using done()
	--introduce sinon mocking
	--add invalid input error in performSort() for error occurred by invalid option input
	--modify parse() for detection of reverse option taking help of a reducer function that will reduce through the command line args
	--Implement sortLines() separate function to sort lines considering reverse option also. //it will check if reverse option is there or not
	--link new sortLines() function to performSort so that previous versions and current version work fine
	--implement a reducer function to reduce through all command lines args
	--improve the naming of sortTools lib
	--add appTests to test features of the current version